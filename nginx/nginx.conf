user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 형식 정의
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # 한국 시간대 적용
    # 컨테이너 환경변수 또는 시스템 타임존이 Asia/Seoul 로 설정되었을 때
    # 로그의 $time_local 역시 KST로 기록됩니다.
    access_log /var/log/nginx/access.log main;
    
    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;
    
    # Rate limiting (AI Gateway 최적화)
    # API: 일반 요청은 100r/s, burst 50 (분석 요청 고려)  
    # Health: 헬스체크는 200r/s, burst 100 (클러스터 모니터링 고려)
    # Metrics: 메트릭은 30r/s (모니터링 툴 고려)
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=metrics:10m rate=30r/s;
    
    # 블루/그린 배포를 위한 upstream 설정
    upstream cdl_gateway {
        server cdl-gateway-blue:8000 max_fails=3 fail_timeout=30s;
        server cdl-gateway-green:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name localhost;
        
        # Let's Encrypt challenge for certificate renewal
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name localhost;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # SSL session configuration
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 24h;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # 헬스체크 엔드포인트 (rate limit 완화)
        location /status/ {
            limit_req zone=health burst=100 nodelay;
            proxy_pass http://cdl_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API 엔드포인트
        location / {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://cdl_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 타임아웃 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # 정적 파일 서빙
        location /static/ {
            alias /app/static/;
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }

        # Prometheus 메트릭 엔드포인트
        location /metrics {
            limit_req zone=metrics burst=10 nodelay;
            proxy_pass http://cdl_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 기본 인증 (선택사항)
            # auth_basic "Prometheus Metrics";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # Documentation endpoints
        location ~ ^/(docs|redoc|openapi.json) {
            proxy_pass http://cdl_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}